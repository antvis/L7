name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches:
      - '**'

permissions:
  contents: read # to fetch code (actions/checkout)

concurrency:
  group: '${{ github.workflow }} - ${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      # TODO: prepare-install CI To caching dependencies to speed up workflows
      - name: Install dependencies
        run: yarn

      - name: Check
        run: |
          yarn check-deps
      #TODO: turn on after format fixd
      # yarn check-format

      - name: Lint
        run: yarn lint:ts

      #TODO: turn on after fixd
      # - name: Stylelint
      #   run: yarn lint:css

  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install system dependencies
        # install system dependencies up to date for use headless-gl in ubuntu
        # see https://github.com/stackgl/headless-gl#how-can-i-use-headless-gl-with-a-continuous-integration-service
        run: sudo apt-get install -y build-essential libgl1-mesa-dri libglapi-mesa
          libglew-dev libglu1-mesa-dev libosmesa6
          libxi-dev mesa-utils pkg-config

      - name: Install dependencies
        run: yarn

      - name: Coverage Test
        # use xvfb-run run in ubuntu
        run: xvfb-run yarn test-cover

      - name: Upload test coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  integration-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Integration Test
        run: yarn test:integration

      - name: Upload snapshots to GitHub Actions Artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: snapshots
          path: |
            test/integration/snapshots/**/*/*-actual.png
          retention-days: 1

  size-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn

      - name: Szie Test With Build
        run: yarn test:size
